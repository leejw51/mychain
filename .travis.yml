clean_cache: &clean_cache
  language: rust
  sudo: required
  dist: trusty
  if: type = cron
  cache:
    directories: # cargo caching from https://docs.travis-ci.com/user/caching/#rust-cargo-cache
      - $HOME/.cargo
      - $TRAVIS_BUILD_DIR/target
      - $HOME/.rustup/toolchains
      - $HOME/lib
      - $HOME/include
      - $HOME/bin
      - /usr/local/bin # kcov
  install:
  script:
    echo "Cleaning cargo cache ..."
    rm -rf $HOME/.cargo/registry
    rm -rf $HOME/.rustup/toolchains
    cargo clean

rust: &rust
  language: rust
  sudo: required
  dist: trusty
  addons:
    apt:
      packages:
        - libssl-dev
        - libcurl4-openssl-dev
        - libelf-dev
        - libdw-dev
        - cmake
        - gcc
        - binutils-dev
        - libc6-dev
  cache:
    directories: # cargo caching from https://docs.travis-ci.com/user/caching/#rust-cargo-cache
      - $HOME/.cargo
      - $TRAVIS_BUILD_DIR/target
      - $HOME/.rustup/toolchains
      - $HOME/lib
      - $HOME/include
      - $HOME/bin
      - /usr/local/bin # kcov
  before_cache:
    - |
      # $TRAVIS_BUILD_DIR/target becomes too big under nightly
      if [[ "$TRAVIS_RUST_VERSION" == nightly ]]; then
        rm -rf $TRAVIS_BUILD_DIR/target
      fi
    - du -sh $HOME/.cargo $TRAVIS_BUILD_DIR/target $HOME/.rustup/toolchains $HOME/lib $HOME/include $HOME/bin
    - rm -rf $HOME/.cargo/registry/src
  env:
    - RUST_BACKTRACE=1
    - RUSTFLAGS=-Ctarget-feature=+aes,+ssse3
    - PATH=$HOME/.local/bin:$PATH
    - LD_LIBRARY_PATH=$HOME/lib
    - PKG_CONFIG_PATH=$HOME/lib/pkgconfig
  before_install: # versions from https://github.com/erickt/rust-zmq/blob/master/.travis.yml
    - ./install_zeromq.sh
    - |
      if [[ "$TRAVIS_RUST_VERSION" == nightly ]]; then
        ./install_kcov.sh 
        cargo-kcov --version || cargo install cargo-kcov;
      fi

  script:
    - cargo build
    - cargo test
    - |
      if [[ "$TRAVIS_RUST_VERSION" == stable ]]; then
        (rustfmt --version || rustup component add rustfmt)
        cargo fmt -- --check --color=auto
        (cargo-clippy --version || rustup component add clippy)
        cargo clippy -- -D warnings
        (cargo-audit -h || cargo install cargo-audit)
        cargo audit
      fi

  after_success: |
    if [[ "$TRAVIS_RUST_VERSION" == nightly ]]; then
      travis_wait 30 cargo kcov --all;
      bash <(curl -s https://codecov.io/bash);
    fi

jobs:
  allow_failures:
    - rust: nightly
  include:
    - <<: *rust
      rust: stable
      if: (type != cron) AND (branch != staging.tmp) AND (branch != trying.tmp)
    - <<: *rust
      rust: beta
      if: (type != cron) AND ((branch = staging) OR (branch = trying))
    - <<: *rust
      rust: nightly
      if: (type != cron) AND (branch != staging.tmp) AND (branch != trying.tmp)
    - name: Integration Test
      language: node_js
      node_js: 10
      sudo: required
      dist: trusty
      if: (type != cron) AND ((branch = staging) OR (branch = trying))
      script:
        - cd integration-tests
        - ./prepare.sh || travis_terminate 1;
        - . ./env.sh
        - docker-compose up -d || travis_terminate 1;
        - ./wait-for-setup.sh || (docker-compose ps && docker-compose logs -t --tail="all" && travis_terminate 1);
        - ./run-test.sh || (docker-compose ps && docker-compose logs -t --tail="all" && travis_terminate 1);
        - |
          cd client-rpc
          yarn
          yarn test || (docker-compose ps && docker-compose logs -t --tail="all" && travis_terminate 1);

    - <<: *clean_cache
      rust: stable
    - <<: *clean_cache
      rust: beta
    - <<: *clean_cache
      rust: nightly
