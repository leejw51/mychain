// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.
enclave {

    include "time.h"
    include "pthread.h"

    trusted {
        public void *t_thread_main([in, size=len]void *arg, int len);
    };

    untrusted {
        int u_pthread_create_ocall([out]pthread_t *thread, [in]const pthread_attr_t *attr, [user_check]void *start_routine, [in, size=len]void *arg, int len);
        int u_pthread_join_ocall(pthread_t thread, [out]void **result);
        int u_pthread_detach_ocall(pthread_t thread);
        int u_sched_yield_ocall([out]int *error);
        int u_nanosleep_ocall([out]int *error, [in]const struct timespec *req, [out]struct timespec *rem);
    };
};
